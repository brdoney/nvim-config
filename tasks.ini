# vim: set fenc=utf-8 ft=dosini:

# define a new task named "file-build"
[file-build]
command:rust=env RUST_BACKTRACE=1 cargo build
# shell command, use quotation for filenames containing spaces
# check ":AsyncTaskMacro" to see available macros
command:c=gcc "$(VIM_FILEPATH)" -o "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
# working directory, can change to $(VIM_ROOT) for project root
cwd=$(VIM_CWD)
# output mode, can be one of quickfix and terminal
# - quickfix: output to quickfix window
# - terminal: run the command in the internal terminal
output=terminal
# this is for output=quickfix only
# if it is omitted, vim's current errorformat will be used.
errorformat=%f:%l:%m
# save file before execute
save=2

[file-run]
command:javascript=node "$(VIM_FILEPATH)"
command:python=python3 "$(VIM_FILEPATH)"
command:rust=env RUST_BACKTRACE=1 cargo run
command:go=go run "$(VIM_FILEDIR)"
command:cpp=cd "$(VIM_FILEDIR)" && g++ -std=c++17 -Wall "$(VIM_FILENAME)" -o "$(VIM_FILENOEXT)" && "$(VIM_FILEDIR)/$(VIM_FILENOEXT)"
cwd=$(VIM_CWD)
output=terminal
save=2

[test]
command:rust=env RUST_BACKTRACE=1 cargo test
command:go=go test
output=terminal
save=2
